create database library;

use library;

create table Branch(
Branch_no int  PRIMARY KEY,
Manager_id int,
Branch_address varchar(100),
Contact_no int);

INSERT INTO Branch VALUES
 (1, 101, '705 Pine Blvd', 5551234),
  (2, 102, '705 Pine Blvd', 5555678),
  (3, 103, '868 Poplar Ave',5559012),
  (4, 104, '303 Birch Ln', 5553456),
  (5, 105, '202 Maple Ave',5557890),
  (6, 106, '303 Birch Ln', 5552345),
  (7, 107, '868 Poplar Ave', 5556789),
  (8, 108, '517 Cedar Ave', 5551234),
  (9, 109, '868 Poplar Ave', 5555678),
  (10, 110, '517 Cedar Ave', 5559012);
  
select * from Branch;


create table Employee(
Emp_Id int PRIMARY KEY ,
Emp_name varchar(30) not null,
Position varchar(20) not null,
Salary decimal(10,2),
Branch_no int,
FOREIGN KEY(Branch_no) REFERENCES Branch(Branch_no));

INSERT INTO Employee VALUES
  (001, 'Sasha Cornell', 'Manager', 60000, 3),
  (002, 'Gale Emerson', 'Librarian', 48000.00, 2),
  (003, 'Jack King', 'Assistant Manager', 50000, 1),
  (004, 'Aneeta Vance', 'Librarian', 45000, 2),
  (005, 'Casper Brown', 'Clerk', 40000, 3),
  (006, 'Daniel Bryan', 'Assistant Manager', 52000, 2),
  (007, 'Rowan Reyes', 'Librarian', 45000, 1),
  (008, 'Tommy Vercetti', 'Clerk', 41000, 4),
  (009, 'Enzo Amore', 'Manager', 65000, 4),
  (010, 'Reena Durand', 'Clerk', 42000, 3);

select * from Employee;


create table Books(
ISBN int PRIMARY KEY,
Book_title varchar(100) not null,
Category varchar(50),
Rental_Price decimal(8,2),
Status Enum('Yes','No') Not null,
Author varchar(100),
Publisher varchar(100));

INSERT INTO Books VALUES
  ('1001', 'The Hobbit', 'Fantasy', 6.99, 'Yes', 'J.R.R. Tolkien', 'Allen & Unwin'),
  ('1002', 'The Da Vinci Code', 'Mystery', 7.99, 'No', 'Dan Brown', 'Doubleday'),
  ('1003', '1984', 'Dystopian', 5.99, 'Yes', 'George Orwell', 'Secker & Warburg'),
  ('1004', 'The Great Gatsby', 'Classic', 3.99, 'No', 'F. Scott Fitzgerald', 'Scribner'),
  ('1005', 'The Catcher in the Rye', 'Fiction', 3.99, 'Yes', 'J.D. Salinger', 'Little, Brown and Company'),
  ('1006', 'The Renaissance: Art and Culture', 'History', 14.50, 'No', 'Michael Renaissance Scholar', 'Artistic Books'),
  ('1007', 'The History of Ancient Civilizations', 'History', 12.99, 'Yes', 'John Historian', 'Academic Press'),
  ('1008', 'The Hunger Games', 'Science Fiction', 5.99, 'No', 'Suzanne Collins', 'Scholastic'),
  ('1009', 'To Kill a Mockingbird', 'Fiction', 4.99, 'Yes', 'Harper Lee', 'J.B. Lippincott & Co.'),
  ('1010', 'Harry Potter and the Philosopher\'s Stone', 'Fantasy', 6.99, 'Yes', 'J.K. Rowling', 'Bloomsbury');

select * from Books;

create table Customer(
Customer_Id  int PRIMARY KEY,
Customer_name varchar(20) not null,
Customer_address varchar(200),
Reg_date date);

INSERT INTO Customer VALUES
  (1, 'Aaliya Ahmed', '868 Poplar Ave', '2021-03-02'),
  (2, 'Benjamin Barnes', '597 Poplar Rd', '2021-11-10'),
  (3, 'Cameron Charles', '572 Pine Ave', '2020-12-12'),
  (4, 'David Davis', '155 Maple St', '2020-11-07'),
  (5, 'Elna Edison', '896 Elm Rd', '2021-09-19'),
  (6, 'Fiona Felix', '517 Cedar Ave', '2023-10-05'),
  (7, 'Gabrielle Garcia', '705 Pine Blvd', '2023-03-10'),
  (8, 'Henry Hughes', '473 Poplar Blvd', '2023-09-06'),
  (9, 'Isabella Isaac', '715 Pine Ave', '2022-10-22'),
  (10, 'Jacob Jackson', '919 Main Ave', '2023-11-28');

select * from Customer;

create table IssueStatus(
Issue_Id int  PRIMARY KEY,
Issued_cust int,
Issued_book_name varchar(200) not null,
Issue_date date,
Isbn_book int,
FOREIGN KEY(Issued_cust) references Customer(customer_id),
FOREIGN KEY(Isbn_book) references Books(ISBN));

INSERT INTO IssueStatus(Issue_id,Issued_cust,Issued_book_name,Issue_date) VALUES
  (201, 1, 'The Hobbit', '2023-06-15'),
  (202, 2, '1984', '2024-01-16'),
  (203, 3, 'The Catcher in the Rye', '2023-06-17'),
  (204, 4, 'The History of Ancient Civilizations', '2024-01-18'),
  (205, 5, 'To Kill a Mockingbird', '2024-01-19');

select * from IssueStatus;

create table ReturnStatus( 
Return_Id int PRIMARY KEY,
Return_cust int,
Return_book_name varchar(100) not null,
Return_date date, 
Isbn_book2 int,
FOREIGN KEY(Isbn_book2) references Books(ISBN));

INSERT INTO ReturnStatus (Return_Id, Return_cust, Return_book_name, Return_date, Isbn_book2)
VALUES
  (301, 1, 'The Hobbit', '2023-08-15', '1001'),
  (302, 2, '1984', '2024-03-16', '1003'),
  (303, 3, 'The Catcher in the Rye', '2023-08-17', '1005'),
  (304, 4, 'The History of Ancient Civilizations', '2024-03-18', '1007'),
  (305, 5, 'To Kill a Mockingbird', '2024-03-19', '1009');

select * from ReturnStatus;


-- 1. Retrieve the book title, category, and rental price of all available books.
select Book_title,Category,Rental_Price from Books where status='Yes';

-- 2. List the employee names and their respective salaries in descending order of salary.
select Emp_name,Salary from employee order by salary desc;

-- 3. Retrieve the book titles and the corresponding customers who have issued those books.
select Customer_Id,Issued_book_name,Customer_name 
from issuestatus I 
JOIN Customer C ON I.Issued_cust=C.customer_id;


-- 4. Display the total count of books in each category.
select Category,count(*) as total_Books from books group by Category;

-- 5. Retrieve the employee names and their positions for the employees whose salaries are above Rs.50,000.  
select Emp_name,Position,Salary from employee where Salary>50000;

-- 6. List the customer names who registered before 2022-01-01 and have not issued any books yet.
select Customer_name from customer
where Reg_date<'2022-01-01' AND
Customer_Id NOT IN(select Issued_cust from issuestatus);

-- 7. Display the branch numbers and the total count of employees in each branch.
select Branch_no, count(*) as Total_employees from Employee group by Branch_no;

-- 8. Display the names of customers who have issued books in the month of June 2023.
select C.Customer_name from Customer C
Join issuestatus I  on I.Issued_cust=C.Customer_Id
where month(Issue_date)=6 AND year(Issue_date)=2023;

-- 9. Retrieve the book_title from the book table containing history.
select Book_title from books where Category='History';

-- 10.Retrieve the branch numbers along with the count of employees for branches having more than 5 employees.
select Branch_no,count(*) as Total_Employees from Employee group by Branch_no having Total_Employees>5;
